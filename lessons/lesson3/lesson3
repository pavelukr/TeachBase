class Station
  attr_reader :name
  attr_accessor :list_of_trains

  def initialize(name)
    @name = name
    @list_of_trains = []
  end

  def get_train(train)
    @list_of_trains << train
  end

  def show_all_trains
    print 'These trains are on station now: '
    list_of_trains.each { |train| print " #{train.number}; " }
    puts "\n"
  end

  def setting_up_train(train)
    puts "Setting up the train #{train.number}"
    list_of_trains.delete(train)
  end

  def count_trains
    cargo = 0
    passenger = 0
    list_of_trains.each do |train|
      case train.type
      when 'cargo'
        cargo += 1
      when 'passenger'
        passenger += 1
      else
        puts 'Something went wrong'
      end
    end
    puts "On the station you have #{cargo} type cargo of wagons and #{passenger} type passenger of wagons"
  end
end

class Route
  attr_accessor :stations,
                :counter

  def initialize(begin_of_route, end_of_route)
    @stations = [begin_of_route, end_of_route]
    @counter = 1
  end

  def add_station(station)
    stations.insert(counter, station)
    @counter += 1
  end

  def delete_station(station)
    @stations.delete(station)
    @counter -= 1
  end

  def show_route
    print 'Your route is: '
    stations.each { |station| print "#{station.name} -> " }
    puts "\n"
  end
end

class Train
  attr_accessor :number,
                :type,
                :amount_of_vagons,
                :speed,
                :temporary_station,
                :route

  def initialize(number, type, amount_of_vagons)
    @number = number
    @type = type
    @amount_of_vagons = amount_of_vagons
    @speed = 0
  end

  def add_delete_wagon(operation)
    if @speed.zero?
      case operation
      when '+'
        @amount_of_vagons += 1
      when '-'
        @amount_of_vagons -= 1
      end
    else
      puts "You can't add or delete wagon, because train is moving"
    end
  end

  def train_stop
    @speed = 0
  end

  def showing_route
    puts "The previous station is #{
      if @route.stations.find_index(temporary_station) != 0
        @route.stations[route.stations.find_index(temporary_station) - 1].name
      end}\n
The temporary station is #{temporary_station.name}\n
The next station is #{
      if @route.stations.find_index(temporary_station) != (@route.stations.length - 1)
        @route.stations[@route.stations.find_index(temporary_station) + 1].name
      end}"
  end
end
